plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.example.java'
version = '1.0.0'
sourceCompatibility = '14'

// <EnablePreview>
tasks.withType(JavaCompile) {
	options.compilerArgs += "--enable-preview"
}
tasks.withType(Test) {
	jvmArgs += "--enable-preview"
	jvmArgs += "-XX:+ShowCodeDetailsInExceptionMessages"
}
tasks.withType(JavaExec) {
	jvmArgs += "--enable-preview"
	jvmArgs += "-XX:+ShowCodeDetailsInExceptionMessages"
}
// </EnablePreview>

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'com.google.guava:guava:29.0-jre'
	implementation 'org.apache.commons:commons-lang3:3.10'
	testImplementation 'org.awaitility:awaitility:4.0.2'
	implementation "io.reactivex.rxjava3:rxjava:3.0.2"
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
